'use client'; // Assure que ce code est exécuté côté client

import { useEffect, useState } from "react";

const Banner728x80Home = () => {
  const [isVisible, setIsVisible] = useState(true);
  const [isMobile, setIsMobile] = useState(false);
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    // Indiquer que le composant est monté côté client
    setIsClient(true);

    // Détecter si l'écran est mobile
    const handleResize = () => {
      setIsMobile(window.innerWidth <= 768);
    };

    handleResize(); // Initialiser la valeur de isMobile
    window.addEventListener('resize', handleResize);

    // Charger le script Revive Adserver uniquement côté client
    const script = document.createElement("script");
    script.src = "//client.cynomedia-africa.com/www/delivery/asyncjs.php";
    script.async = true;
    document.body.appendChild(script);

    // Nettoyage du script lors du démontage du composant
    return () => {
      window.removeEventListener('resize', handleResize);
      document.body.removeChild(script);
    };
  }, []); // Ce useEffect s'exécute uniquement une fois après le premier rendu

  if (!isClient) return null; // Évite les erreurs d'hydratation en ne rendant rien côté serveur

  return (
    <div
      className="elementor-element elementor-element-5f64193 elementor-hidden-phone elementor-widget elementor-widget-smartmag-codes"
      data-id="5f64193"
      data-element_type="widget"
      data-widget_type="smartmag-codes.default"
    >
      <div className="elementor-widget-container">
        <div className="a-wrap">
          {/* Revive Adserver Asynchronous JS Tag - Generated with Revive Adserver v5.4.1 */}
          {isMobile ? (
              <ins data-revive-zoneid="207" data-revive-id="97f3bbebf0ebdc5eed163b8fac6171c8"></ins>
            ) : (
              <ins data-revive-zoneid="211" data-revive-id="97f3bbebf0ebdc5eed163b8fac6171c8"></ins>
            )}
        </div>
      </div>
    </div>
  );
};

export default Banner728x80Home;
